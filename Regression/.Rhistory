p_load(Hmisc)
p_load(magrittr)
p_load(tidyr)
p_load(scales)
p_load(rms)
p_load(broom)
p_load(stargazer)
p_load(knitr)
p_load(emisc)
knitr::opts_chunk$set(comment = NULL)
options(scipen = 9) # eliminate scientific notation
movie_folder_id = 13948823224
old <- theme_get()
the_new <- old %+% theme(text = element_text(family = "HelveticaNeue-Light"),
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "grey"))
theme_set(the_new)
set.seed(20161123)  # get the same results when using stochastic functions
library(magrittr)
p_load(magrittr)
pacman::p_load(eboxr)
transactions <- eboxr_read("/Users/curtbergmann/Box Sync/Elicit Education/scholar/regclass/transactions.RDS",
read_fun = readRDS)
transactions %<>%      # note the %<>% combination pipe plus re-assign operator
# remember the idea of idempotence from the summary statistics course?
mutate(appliance_purchase_factor = factor(appliance_purchase, levels = c(0, 1), labels = c("No", "Yes")),
appliance_purchase_binary = appliance_purchase)
# Create bootstrap model function to run top models
boot_train <- function(form){
train(formula(form), data=transactions %>%
select(-appliance_purchase_factor
, -appliance_purchase_binary
,-customer_id)
, method='gbm'
, metric = "ROC"
, verbose = FALSE
, trControl=trainControl(method='boot'
, number = 25
, classProbs=TRUE
, summaryFunction=twoClassSummary
, savePredictions = TRUE))
}
# Set up parallel processing
p_load(doParallel)
doParallel::registerDoParallel(cores = detectCores())
top_models <- readRDS("top_models.rds")
transactions %<>%
mutate(appliance_purchase = relevel(appliance_purchase_factor, ref = 'Yes')) # changing the order so
bootstrap_results <- data_frame() %>%
add_model(boot_train(top_models$form[[1]])
, desc = paste('boot_train',top_models$desc[[1]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[2]])
, desc = paste('boot_train',top_models$desc[[2]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[3]])
, desc = paste('boot_train',top_models$desc[[3]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[4]])
, desc = paste('boot_train',top_models$desc[[4]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[5]])
, desc = paste('boot_train',top_models$desc[[5]])
, logistic_true = 1)
boxplots <- bootstrap_results %>%
select(desc, train_resamples) %>%
unnest(train_resamples) %>%
ggplot(aes(desc, ROC, group = desc)) +
geom_boxplot() +
coord_flip()
print(boxplots)
saveRDS(boxplots, file = "bootstrap_boxplots_marks.rds")
watch_store_trans <- eboxr_read("/Users/curtbergmann/Box Sync/Elicit Education/scholar/regclass/watch_store_trans.RDS",
read_fun = readRDS)
names(watch_store_trans)
summary(watch_band_purchase ~ ., data = watch_store_trans)
formula_all <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + frequency + sales")
model_results <- data_frame() %>%
add_model(lrm(formula_all, data=watch_store_trans, y = TRUE),
logistic_true = 1,    # what is the value for the predicted dependent variable?
desc="logistic all variables")
model_results %>%
select(desc, auc, AIC, topq, R2)
model_results %>%
group_by(desc) %>%
select(desc, topq_tbl) %>%
unnest(topq_tbl) %>%
ungroup %>%
ggplot(aes(quantile_group_id, cum_conversions, color = desc)) +
geom_line()
corrgram::corrgram(watch_store_trans %>% select(-customer_id), order = TRUE)
anova(model_results[[1,'model']], test = "Chisq")
formula_reverse <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + sales + frequency")
formula_reverse2 <- as.formula("watch_band_purchase ~  sales + frequency +handbag_units + salary + belt_units + watch_sales + recency_days")
model_results %<>%
add_model(lrm(formula_reverse, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm all reverse sales/frequency") %>%
add_model(lrm(formula_reverse2, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm sales/frequency first")
anova(model_results[[1,'model']], test = "Chisq")
anova(model_results[[2,'model']], test = "Chisq")
anova(model_results[[3,'model']], test = "Chisq")
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs")
model_results %>%
select(desc, auc, topq)
summary(model_results[[6,'model']])
model_results
summary(model_results[[4,'model']])
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
belt_units +
watch_sales +
sales +
frequency
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs for handbags and salary") %>%
add_model()
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
belt_units +
watch_sales +
sales +
frequency
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs for handbags and salary")
model_results %>%
select(desc, auc, topq)
model_results %>%
select(desc, auc, topq)
formula_all
?glm
library(pacman)
p_load(caret)
p_load(ggplot2)
p_load(plyr)    # need to load before dplyr due to presense of plyr still in gbm
p_load(dplyr)
p_load(Hmisc)
p_load(magrittr)
p_load(tidyr)
p_load(scales)
p_load(rms)
p_load(broom)
p_load(stargazer)
p_load(knitr)
knitr::opts_chunk$set(comment = NULL)
options(scipen = 9) # eliminate scientific notation
movie_folder_id = 13948823224
old <- theme_get()
the_new <- old %+% theme(text = element_text(family = "HelveticaNeue-Light"),
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "grey"))
theme_set(the_new)
# The following function is created so that all of the later movie definitions
# have a link which an RStudio user may command-click on to view
movie <- function(filename_string) {
filename = stringr::str_match(filename_string, "\\((.*?)\\)")[[2]]
cat(paste0('<video src="', filename, '" width="480" height="360" controls="controls">
your browser does not support the video tag
</video>'))
return(invisible())
}
set.seed(20161123)  # get the same results when using stochastic functions
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs")
model_results %>%
select(desc, auc, topq)
formula_reverse <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + sales + frequency")
formula_reverse2 <- as.formula("watch_band_purchase ~  sales + frequency +handbag_units + salary + belt_units + watch_sales + recency_days")
model_results %<>%
add_model(lrm(formula_reverse, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm all reverse sales/frequency") %>%
add_model(lrm(formula_reverse2, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm sales/frequency first")
anova(model_results[[1,'model']], test = "Chisq")
anova(model_results[[2,'model']], test = "Chisq")
anova(model_results[[3,'model']], test = "Chisq")
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs")
model_results %>%
select(desc, auc, topq)
formula_all <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + frequency + sales")
model_results <- data_frame() %>%
add_model(lrm(formula_all, data=watch_store_trans, y = TRUE),
logistic_true = 1,    # what is the value for the predicted dependent variable?
desc="logistic all variables")
model_results %>%
select(desc, auc, AIC, topq, R2)
model_results %>%
group_by(desc) %>%
select(desc, topq_tbl) %>%
unnest(topq_tbl) %>%
ungroup %>%
ggplot(aes(quantile_group_id, cum_conversions, color = desc)) +
geom_line()
anova(model_results[[1,'model']], test = "Chisq")
formula_reverse <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + sales + frequency")
formula_reverse2 <- as.formula("watch_band_purchase ~  sales + frequency +handbag_units + salary + belt_units + watch_sales + recency_days")
model_results %<>%
add_model(lrm(formula_reverse, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm all reverse sales/frequency") %>%
add_model(lrm(formula_reverse2, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm sales/frequency first")
anova(model_results[[1,'model']], test = "Chisq")
anova(model_results[[2,'model']], test = "Chisq")
anova(model_results[[3,'model']], test = "Chisq")
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs")
model_results %>%
select(desc, auc, topq)
library(pacman)
p_load(caret)
p_load(ggplot2)
p_load(plyr)    # need to load before dplyr due to presense of plyr still in gbm
p_load(dplyr)
p_load(Hmisc)
p_load(magrittr)
p_load(tidyr)
p_load(scales)
p_load(rms)
p_load(broom)
p_load(stargazer)
p_load(knitr)
p_load(emisc)
p_load(magrittr)
knitr::opts_chunk$set(comment = NULL)
options(scipen = 9) # eliminate scientific notation
movie_folder_id = 13948823224
old <- theme_get()
the_new <- old %+% theme(text = element_text(family = "HelveticaNeue-Light"),
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "grey"))
theme_set(the_new)
set.seed(20161123)  # get the same results when using stochastic functions
pacman::p_load(eboxr)
transactions <- eboxr_read("/Users/curtbergmann/Box Sync/Elicit Education/scholar/regclass/transactions.RDS",
read_fun = readRDS)
transactions %<>%      # note the %<>% combination pipe plus re-assign operator
# remember the idea of idempotence from the summary statistics course?
mutate(appliance_purchase_factor = factor(appliance_purchase, levels = c(0, 1), labels = c("No", "Yes")),
appliance_purchase_binary = appliance_purchase)
# Create bootstrap model function to run top models
boot_train <- function(form){
train(formula(form), data=transactions %>%
select(-appliance_purchase_factor
, -appliance_purchase_binary
,-customer_id)
, method='gbm'
, metric = "ROC"
, verbose = FALSE
, trControl=trainControl(method='boot'
, number = 25
, classProbs=TRUE
, summaryFunction=twoClassSummary
, savePredictions = TRUE))
}
# Set up parallel processing
p_load(doParallel)
doParallel::registerDoParallel(cores = detectCores())
top_models <- readRDS("top_models.rds")
transactions %<>%
mutate(appliance_purchase = relevel(appliance_purchase_factor, ref = 'Yes')) # changing the order so
bootstrap_results <- data_frame() %>%
add_model(boot_train(top_models$form[[1]])
, desc = paste('boot_train',top_models$desc[[1]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[2]])
, desc = paste('boot_train',top_models$desc[[2]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[3]])
, desc = paste('boot_train',top_models$desc[[3]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[4]])
, desc = paste('boot_train',top_models$desc[[4]])
, logistic_true = 1) %>%
add_model(boot_train(top_models$form[[5]])
, desc = paste('boot_train',top_models$desc[[5]])
, logistic_true = 1)
boxplots <- bootstrap_results %>%
select(desc, train_resamples) %>%
unnest(train_resamples) %>%
ggplot(aes(desc, ROC, group = desc)) +
geom_boxplot() +
coord_flip()
print(boxplots)
saveRDS(boxplots, file = "bootstrap_boxplots_marks.rds")
watch_store_trans <- eboxr_read("/Users/curtbergmann/Box Sync/Elicit Education/scholar/regclass/watch_store_trans.RDS",
read_fun = readRDS)
names(watch_store_trans)
summary(watch_band_purchase ~ ., data = watch_store_trans)
formula_all <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + frequency + sales")
model_results <- data_frame() %>%
add_model(lrm(formula_all, data=watch_store_trans, y = TRUE),
logistic_true = 1,    # what is the value for the predicted dependent variable?
desc="logistic all variables")
model_results %>%
select(desc, auc, AIC, topq, R2)
model_results %>%
group_by(desc) %>%
select(desc, topq_tbl) %>%
unnest(topq_tbl) %>%
ungroup %>%
ggplot(aes(quantile_group_id, cum_conversions, color = desc)) +
geom_line()
corrgram::corrgram(watch_store_trans %>% select(-customer_id), order = TRUE)
anova(model_results[[1,'model']], test = "Chisq")
formula_reverse <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + sales + frequency")
formula_reverse2 <- as.formula("watch_band_purchase ~  sales + frequency +handbag_units + salary + belt_units + watch_sales + recency_days")
model_results %<>%
add_model(lrm(formula_reverse, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm all reverse sales/frequency") %>%
add_model(lrm(formula_reverse2, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm sales/frequency first")
anova(model_results[[1,'model']], test = "Chisq")
anova(model_results[[2,'model']], test = "Chisq")
anova(model_results[[3,'model']], test = "Chisq")
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs") %>%
add_model(glm(watch_band_purchase ~
handbag_units +
salary +
belt_units +
watch_sales +
sales +
frequency
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm w/o rcs")
model_results %>%
select(desc, auc, topq)
formula_all
?lrm
glm(formula_all, data=watch_store_trans)
glm(formula_all, data=watch_store_trans) %>% summary
glm(formula_all, data=watch_store_trans) %>% glance
lrm(formula_all, data=watch_store_trans) %>% glance
glm(formula_all, data=watch_store_trans, family = "binomial") %>% glance
?glm
test <- glm(formula_all, data=watch_store_trans, family = "binomial") %>% glance
summary(test)
preds <- prob(predict(test,watch_store_trans))
preds <- predict(test,watch_store_trans)
class(test)
test <- glm(formula_all, data=watch_store_trans, family = "binomial")
preds <- predict(test,watch_store_trans)
test_df <- watch_store_trans
test_df$pred <- preds
library(pROC)
g <- roc(watcH_band_purchase ~ pred, data = watch_store_trans)
g <- roc(watch_band_purchase ~ pred, data = watch_store_trans)
g <- roc(watch_band_purchase ~ pred, data = test_df)
plot(g)
library(Deducer)
p_load(Deducer)
library(Deducer)
g
?add_model()
formula_all
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(recency_days, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs") %>%
add_model(glm(watch_band_purchase ~
handbag_units +
salary +
belt_units +
watch_sales +
recency_days +
sales +
frequency
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm w/o rcs")
model_results %>%
select(desc, auc, topq)
formula_all <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + frequency + sales")
model_results <- data_frame() %>%
add_model(lrm(formula_all, data=watch_store_trans, y = TRUE),
logistic_true = 1,    # what is the value for the predicted dependent variable?
desc="logistic all variables")
model_results %>%
select(desc, auc, AIC, topq, R2)
model_results %>%
group_by(desc) %>%
select(desc, topq_tbl) %>%
unnest(topq_tbl) %>%
ungroup %>%
ggplot(aes(quantile_group_id, cum_conversions, color = desc)) +
geom_line()
corrgram::corrgram(watch_store_trans %>% select(-customer_id), order = TRUE)
anova(model_results[[1,'model']], test = "Chisq")
formula_reverse <- as.formula("watch_band_purchase ~ handbag_units + salary + belt_units + watch_sales + recency_days + sales + frequency")
formula_reverse2 <- as.formula("watch_band_purchase ~  sales + frequency +handbag_units + salary + belt_units + watch_sales + recency_days")
model_results %<>%
add_model(lrm(formula_reverse, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm all reverse sales/frequency") %>%
add_model(lrm(formula_reverse2, data=watch_store_trans, y = TRUE)
, logistic_true = 1
, desc="lrm sales/frequency first")
anova(model_results[[1,'model']], test = "Chisq")
anova(model_results[[2,'model']], test = "Chisq")
anova(model_results[[3,'model']], test = "Chisq")
model_results %<>%
add_model(glm(watch_band_purchase ~
rcs(handbag_units, 5) +
rcs(salary, 5) +
rcs(belt_units, 5) +
rcs(watch_sales, 5) +
rcs(recency_days, 5) +
rcs(sales, 5) +
rcs(frequency, 5)
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm all with rcs") %>%
add_model(glm(watch_band_purchase ~
handbag_units +
salary +
belt_units +
watch_sales +
recency_days +
sales +
frequency
, data=watch_store_trans
, family = 'binomial')
, logistic_true = 1
, desc = "glm w/o rcs")
model_results %>%
select(desc, auc, topq)
model_results%<>%filter(!desc = 'glm w/o rcs')
model_results%<>%filter(!desc == 'glm w/o rcs')
model_results %>%
select(desc, auc, topq)
summary(model_results[[4,'model']])
